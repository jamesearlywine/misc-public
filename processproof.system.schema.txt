Principals:
urn:pp:Security.Principal.User
urn:pp:Security.Principal.UserGroup

Actions:
Action
Role - group of actions

Resource
ResourceCollection - group of resources (non-identifying)



ProcessProof URN Format:
urn:{systemNamespace}:{resourceType}::{resourceIdentifier}

resource identifier format:
all IDs are uuids, or semantic indicators like "jobs:read"


Notes:
- all security policy will be identity-based, attached to principal
- security policy grants for a resource, will apply to all reosurce children
- collections are n:n by reference, non-identifying, unless otherwise indicated

SecurityResourceTypes:
  urn:pp:Security.Principal
  urn:pp:Security.Principal.User
  urn:pp:Security.Principal.UserGroup // collection of User
  urn:pp:Security.Grant.Action
  urn:pp:Security.Grant.Role // collection of Action
  urn:pp:Security.Policy
    . Principal
    . Grant
    . Resource


SystemResourceTypes:
  urn:pp:System
  urn:pp:System.Template.Affidavit

AccountResourceTypes:
  urn:pp:System.Account
  urn:pp:System.Account.Details
  urn:pp:System.Account.Profile
  urn:pp:System.Account.JobCollection
  urn:pp:System.Account.Job
  urn:pp:System.Account.Job.ServiceAttempt
  urn:pp:System.Account.Job.ServiceAffidavit
  urn:pp:System.Account.Job.JobServiceRequest
  urn:pp:System.Account.Job.JobServiceAgreement
  urn:pp:System.Account.Client
  urn:pp:System.Account.Client.Contact
  urn:pp:System.Account.Client.PaymentMethod
  urn:pp:System.Account.Template.ServiceAffidavit


ActionsByResourceType:
	Security:
		- security:manage

	System
		- system:*
		- system:Admin
		- system:CreateAccount
		- system:UpdateAccount
		- system:DeactivateAccount
		- system:ActivateAccount
		- system:RemoveAccount
		- system:AdminTemplates

		Account
			- account:*
			- account:Admin
			- account:AdminJobCollections
			- account:AdminTemplates
			- account:UpdateDetails
			- account:UpdateProfile

			Client
				- client:*
				- client:ListClients
				- client:WriteClient
				- client:ReadClient
				- client:RemoveClient

				Contact
				- client:WriteContact
				- client:RemoveContact

				PaymentMethod
				- client:WritePaymentMethod
				- client:RemovePaymentMethod

			JobCollection
				- jobs:*
				- jobs:ListJobsCollections
				- jobs:ListJobs
				- jobs:AddJobs
				- jobs:RemoveJobs
				- jobs:ListJobsCreatedBySelf
				- jobs:ListJobsAssignedToSelf

					Job
					- jobs:WriteJob
					- jobs:ReadJob
					- jobs:RemoveJob
					- jobs:RemoveJobCreateBySelf
					- jobs:RequestProcessServer
					- jobs:RequestJobAssignment
					- jobs:Assign
					- jobs:Unassign
					- jobs:AssignToSelf
					- jobs:UnassignToSelf

					ServiceRequest
						- jobs:CreateServiceRequest
						- jobs:AcceptServiceRequest
						- jobs:CreateJobRequest
						- jobs:AcceptJobRequest
						- jobs:ReadServiceAgreementInvolvingSelf

					ServiceAttempt
						- jobs:AddServiceAttempt
						- jobs:RemoveServiceAttempt
						- jobs:RemoveServiceAttemptCreatedBySelf

					Affidavit
						- jobs:GenerateServiceAffidavit
						- jobs:GenerateServiceAffidavitForJobServicedBySelf
						- jobs:RemoveServiceAffidavit
						- jobs:RemoveServiceAffidavitCreateBySelf

On first boot:

1. Create system:
- urn:pp:System::{new-system-uuid}

2. Create Security System
	A. Create Actions (see above)

	B. Create Roles:
	- urn:pp:Security.Role::SystemAdmin
		. Name: SystemAdministrator
		- urn:pp:Security.Action::system:*
		- urn:pp:Security.Action::account:*
		- urn:pp:Security.Action::client:*
		- urn:pp:Security.Action::jobs:*

	- urn:pp:Security.Role::AccountAdmin
		. Name AccountAdministrator

		- urn:pp:Security.Action::account:*
		- urn:pp:Security.Action::client:*
		- urn:pp:Security.Action::jobs:*

	C. Create System Owner Account
		- urn:pp:Security.User::{system-owner-user-uuid}
		- urn:pp:Security.Policy::{system-owner-policy-uuid}
			. Principal urn:pp:Security.Principal.User::${system-owner-user-uuid}
			. Resource urn:pp:System::${new-system-uuid}
			. Grant urn:pp:Security.Role::SystemAdmin



New User Creation:
(indentation represents non-identifying relationships stored in graph)

// create account
- urn:pp:System.Account::${new-account-uuid}
	- urn:pp:System.Account.Details::${new-account-details-uuid}
	- urn:pp:System.Account.Profile::${new-account-profile-uuid}
	- urn:pp:System.Account.JobCollection::${new-account-job-collection-uuid}

// create Account Administrators UserGroup
- urn:pp:Security.Principal.UserGroup::${account-administrators-usergroup-uuid}
	. DisplayName: Account Administrators
	. AccountId: ${new-account-uuid}

// create User and assign them to Account Administrators UserGroup
	- urn:pp:Security.Principal.User::${new-user-uuid}

// grant to Account Administrators UserGroup, AccountAdministrator Role, for newly created account
	- urn:pp:Security.Policy
		. Principal urn:pp:Security.Principal.UserGroup::${account-administrators-usergroup-uuid}
		. Resource urn:pp:System.Account::${new-account-uuid}
		. Grant Security.Role::AccountAdministrator






